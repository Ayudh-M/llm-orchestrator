#!/bin/bash
#SBATCH -J llm-consensus
#SBATCH -p gpu_a100           # or gpu_h100 / gpu_mig
#SBATCH --gpus=1
#SBATCH --cpus-per-task=18
#SBATCH -t 00:30:00
#SBATCH -o slurm_%j.out

set -euo pipefail
set -x

module load 2024
source ~/venvs/llm/bin/activate

# Cache on scratch for faster re-runs (optional)
export HF_HOME=${HF_HOME:-/scratch-shared/$USER/hf-cache}
export TRANSFORMERS_CACHE=$HF_HOME
mkdir -p "$HF_HOME"

# Load env if present
if [ -f .env ]; then
  set -a; source .env; set +a
fi

python - <<'PY'
import torch, platform
print("Python:", platform.python_version())
print("CUDA available:", torch.cuda.is_available())
if torch.cuda.is_available():
    print("GPU name:", torch.cuda.get_device_name(0))
    print("GPU count:", torch.cuda.device_count())
PY

PROMPT="${1:-Design a JSON schema for a todo app and provide examples.}"
ROLESET="${2:-}"  # e.g., writer_physicist

export HF_HUB_DISABLE_PROGRESS_BARS=0
export TRANSFORMERS_VERBOSITY=info

if [ -n "$ROLESET" ]; then
  python -m src.main --prompt "$PROMPT" --roleset "$ROLESET"
else
  python -m src.main --prompt "$PROMPT" --models "a=mistralai/Mistral-7B-v0.1 b=mistralai/Mistral-7B-v0.1"
fi

seff $SLURM_JOB_ID || true
